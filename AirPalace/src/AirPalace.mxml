<?xml version="1.0" encoding="utf-8"?>
<mx:WindowedApplication xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	backgroundColor="#444444"
	xmlns:view="net.codecomposer.palace.view.*"
	minHeight="384" minWidth="512"
	width="{roomView.width}" height="{roomView.height+chatBox.height+30}"
	paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0" 
	verticalGap="0"
	horizontalScrollPolicy="off"
	verticalScrollPolicy="off"
	title="{palace.serverName} - {palace.currentRoom.name}"
	horizontalAlign="center"
	verticalAlign="middle"
	showStatusBar="false"
	autoLayout="true"
	close="handleClose(event)"
	creationComplete="handleCreationComplete()" xmlns:local="*">
	<mx:Script>
		<![CDATA[
			import mx.events.AIREvent;
			import mx.events.PropertyChangeEvent;
			import net.codecomposer.palace.rpc.PalaceClient;
		
			
			[Bindable]
			public var palace:PalaceClient = PalaceClient.getInstance();
			
			private var roomListWindow:RoomListWindow = new RoomListWindow();
			private var userListWindow:UserListWindow = new UserListWindow();
			private var connectWindow:ConnectWindow = new ConnectWindow();
			private var logWindow:LogWindow = new LogWindow();
			
			private function disconnect():void {
				palace.disconnect();
			}
			
			private function handleClose(close:Event):void {
				this.exit();
			}
			
			private function handleChatKeyDown(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.ENTER) {
					palace.say(chatBox.text);
					chatBox.text = "";
				}
			}
			
			private function openRoomList():void {
				palace.requestRoomList();
				if (roomListWindow.nativeWindow && roomListWindow.closed) {
					roomListWindow = new RoomListWindow();
				}
				roomListWindow.open();
				roomListWindow.activate();
			}
			
			private function openUserList():void {
				palace.requestUserList();
				if (userListWindow.nativeWindow && userListWindow.closed) {
					userListWindow = new UserListWindow();
				}
				userListWindow.open();
				userListWindow.activate();
			}
			
			private function handleCreationComplete():void {
				openConnectWindow();
				openLogWindow();
			}
			
			private function openConnectWindow():void {
				if (connectWindow.nativeWindow && connectWindow.closed) {
					connectWindow = new ConnectWindow();
				}
				connectWindow.open();
				connectWindow.activate();
			}
			
			private function openLogWindow():void {
				if (logWindow.nativeWindow && logWindow.closed) {
					logWindow = new LogWindow();
				}
				logWindow.open();
				logWindow.nativeWindow.x = 10;
				logWindow.nativeWindow.y = 490;
				logWindow.activate();
			}
			
		]]>
	</mx:Script>
	
	<mx:ApplicationControlBar id="controlBar" horizontalAlign="right" dock="true">
		<mx:Button label="Chat Log" click="openLogWindow()"/>
		<mx:Button label="Room List" click="openRoomList()"/>
		<mx:Button label="User List" click="openUserList()"/>
		<mx:Button label="Disconnect" click="disconnect()" enabled="{palace.connected}" />
		<mx:Button label="Connect" click="openConnectWindow()" />
	</mx:ApplicationControlBar>

	<view:PalaceRoomView id="roomView" room="{palace.currentRoom}" mediaServer="{palace.mediaServer}" />
	<mx:TextInput width="100%" id="chatBox" keyDown="handleChatKeyDown(event);" maxChars="254"/>
	
	
</mx:WindowedApplication>
