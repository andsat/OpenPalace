<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" xmlns:mx="library://ns.adobe.com/flex/halo" xmlns:view="net.codecomposer.palace.view.*" xmlns:code="http://code.google.com/p/flexlib/"
	title="{palace.serverName} - {palace.currentRoom.name}{palace.currentRoom.selectedUser ? ' - ' + palace.currentRoom.selectedUser.name : ''}"
	creationComplete="handleCreationComplete()"
	click="handleTitleClicked(event)"
	currentState="disconnected" xmlns:layout="flexlib.scheduling.scheduleClasses.layout.*">
	
	<s:states>
		<s:State name="disconnected" />
		<s:State name="connecting" />
		<s:State name="connected" />
	</s:states>
	
	<fx:Metadata>
		[Event(name="securityError", type="net.codecomposer.palace.event.PalaceSecurityErrorEvent")]
	</fx:Metadata>
	
	<s:layout>
		<s:BasicLayout />
	</s:layout>
	
	<fx:Script>
		<![CDATA[
			import net.codecomposer.palace.event.PalaceSecurityErrorEvent;
			import net.codecomposer.palace.rpc.PalaceClient;
			[Bindable]
			public var palace:PalaceClient;
			
			private var chatHistory:Array = [];
			private var chatIndex:Number = 0;
			
			// Timer required because in Flex 4 the chat box won't clear
			// immediately in response to the keydown event
			private var timer:Timer = new Timer(10, 1);
			
			private function handleTitleClicked(e:MouseEvent):void{
				// FIXME: Find a better way to de-select the currently selected user.
				if(e.target.name == "Label50")//need to make go from type titleDisplay
				{
					palace.currentRoom.selectedUser = null;
				}
	
			}
			
			private function handleCreationComplete():void {
				timer.addEventListener(TimerEvent.TIMER, clearChatBox);
				roomView.addEventListener(MouseEvent.MOUSE_UP, handleRoomMouseUp);
			}
			
			private function handleChatKeyDown(event:KeyboardEvent):void {
				if (event.keyCode == Keyboard.ENTER) {
					palace.say(chatBox.text);
					timer.reset();
					timer.start();
				}
				else if (event.keyCode == Keyboard.UP) {
					if (chatIndex == chatHistory.length &&
						chatBox.text.length > 0) {
						chatHistory.push(chatBox.text);
					}
					
					if (chatIndex > 0) {
						chatIndex--;
					}
					
					chatBox.text = chatHistory[chatIndex];
					moveCursorToEnd();
				}
				else if (event.keyCode == Keyboard.DOWN){
					if (chatIndex < chatHistory.length) {
						chatIndex++;
					}
					else if (chatIndex == chatHistory.length &&
							 chatBox.text.length > 0) {
						chatHistory.push(chatBox.text);
						chatIndex++;
					}
					chatBox.text = chatHistory[chatIndex];	
					moveCursorToEnd();
				}
				else if (event.keyCode == Keyboard.ESCAPE) {
					chatIndex = chatHistory.length;
					chatBox.text = "";
				}
			}
			
			private function moveCursorToEnd():void {
				chatBox.selectionBeginIndex = chatBox.selectionEndIndex = chatBox.text.length;
			}
			
			private function clearChatBox(event:TimerEvent):void {
				chatHistory.push(chatBox.text);
				chatIndex = chatHistory.length;
				chatBox.text = "";
			}

			private function handleRoomMouseUp(event:MouseEvent):void {
				focusManager.setFocus(chatBox);
				moveCursorToEnd();
			}

			private function handleSecurityError(event:PalaceSecurityErrorEvent):void {
				dispatchEvent(event.clone());
			}
			
			private function clearStatusMessage():void {
				palace.currentRoom.clearStatusMessage();
			}
			
		]]>
	</fx:Script>
	
	<s:Group>
		<s:layout>
			<s:VerticalLayout gap="0"/>
		</s:layout>
		
		<view:PalaceRoomView id="roomView"
							 enabled="{palace.connected}"
							 securityError="handleSecurityError(event)"
							 room="{palace.currentRoom}" mediaServer="{palace.mediaServer}"/>
		
		<s:Group width="100%">
			<s:layout>
				<s:BasicLayout />
			</s:layout>
			<s:Rect top="0" width="100%" height="1">
				<s:fill>
					<s:SolidColor color="#333333" />
				</s:fill>
			</s:Rect>
			<s:Rect width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="#EEEEEE" />
				</s:fill>
			</s:Rect>
			<s:Label left="5" top="5" bottom="3" text="Users: {palace.currentRoom.users.length}/{palace.population}" />
			<s:Label right="5" top="5" bottom="3" text="{palace.currentRoom.statusMessageString}" click="clearStatusMessage()" />
		</s:Group>
		
		<code:PromptingTextInput prompt="Type here to chat..."
								 fontStyle="{palace.currentRoom.selectedUser ? 'italic' : 'normal'}"
								 width="100%"
								 enabled="{palace.connected}"
								 id="chatBox" keyDown="handleChatKeyDown(event);" maxChars="254"/>
	</s:Group>
	

	<s:Label includeIn="connecting"
			 color="#AAAAAA" fontSize="15"
			 horizontalCenter="0" verticalCenter="0"
			 text="Connecting..." />
</s:Panel>
